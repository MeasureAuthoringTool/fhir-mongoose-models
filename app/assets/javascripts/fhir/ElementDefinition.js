const mongoose = require('mongoose/browser');
const DateTime = require('./basetypes/DateTime');
const FHIRDate = require('./basetypes/FHIRDate');
const { AddressSchema } = require('./Address');
const { AgeSchema } = require('./Age');
const { AnnotationSchema } = require('./Annotation');
const { AttachmentSchema } = require('./Attachment');
const { BackboneElementSchema } = require('./BackboneElement');
const { CodeableConceptSchema } = require('./CodeableConcept');
const { CodingSchema } = require('./Coding');
const { ContactDetailSchema } = require('./ContactDetail');
const { ContactPointSchema } = require('./ContactPoint');
const { ContributorSchema } = require('./Contributor');
const { CountSchema } = require('./Count');
const { DataRequirementSchema } = require('./DataRequirement');
const { DistanceSchema } = require('./Distance');
const { DosageSchema } = require('./Dosage');
const { DurationSchema } = require('./Duration');
const { ElementDefinitionBaseSchema } = require('./ElementDefinitionBase');
const { ElementDefinitionBindingSchema } = require('./ElementDefinitionBinding');
const { ElementDefinitionConstraintSchema } = require('./ElementDefinitionConstraint');
const { ElementDefinitionExampleSchema } = require('./ElementDefinitionExample');
const { ElementDefinitionMappingSchema } = require('./ElementDefinitionMapping');
const { ElementDefinitionSlicingSchema } = require('./ElementDefinitionSlicing');
const { ElementDefinitionTypeSchema } = require('./ElementDefinitionType');
const { ExpressionSchema } = require('./Expression');
const { HumanNameSchema } = require('./HumanName');
const { IdentifierSchema } = require('./Identifier');
const { MetaSchema } = require('./Meta');
const { MoneySchema } = require('./Money');
const { ParameterDefinitionSchema } = require('./ParameterDefinition');
const { PeriodSchema } = require('./Period');
const { PropertyRepresentationSchema } = require('./PropertyRepresentation');
const { QuantitySchema } = require('./Quantity');
const { RangeSchema } = require('./Range');
const { RatioSchema } = require('./Ratio');
const { ReferenceSchema } = require('./Reference');
const { RelatedArtifactSchema } = require('./RelatedArtifact');
const { SampledDataSchema } = require('./SampledData');
const { SignatureSchema } = require('./Signature');
const { TimingSchema } = require('./Timing');
const { TriggerDefinitionSchema } = require('./TriggerDefinition');
const { UsageContextSchema } = require('./UsageContext');
const { BackboneElementSchemaFunction } = require('./BackboneElement');

const [Schema] = [mongoose.Schema];

const [Number, String, Boolean] = [
  mongoose.Schema.Types.Number,
  mongoose.Schema.Types.String,
  mongoose.Schema.Types.Boolean,
];

const ElementDefinitionSchema = BackboneElementSchemaFunction({
   path : String,
   representation : [PropertyRepresentationSchema],
   sliceName : String,
   sliceIsConstraining : Boolean,
   label : String,
   code : [CodingSchema],
   slicing : ElementDefinitionSlicingSchema,
   short : String,
   definition : String,
   comment : String,
   requirements : String,
   alias : [String],
   min : Number,
   max : String,
   base : ElementDefinitionBaseSchema,
   contentReference : String,
   type : [ElementDefinitionTypeSchema],
   defaultValueBase64Binary : String,
   defaultValueBoolean : Boolean,
   defaultValueCanonical : String,
   defaultValueCode : String,
   defaultValueDate : FHIRDate,
   defaultValueDateTime : DateTime,
   defaultValueDecimal : Number,
   defaultValueId : String,
   defaultValueInstant : DateTime,
   defaultValueInteger : Number,
   defaultValueMarkdown : String,
   defaultValueOid : String,
   defaultValuePositiveInt : Number,
   defaultValueString : String,
   defaultValueTime : DateTime,
   defaultValueUnsignedInt : Number,
   defaultValueUri : String,
   defaultValueUrl : String,
   defaultValueUuid : String,
   defaultValueAddress : AddressSchema,
   defaultValueAge : AgeSchema,
   defaultValueAnnotation : AnnotationSchema,
   defaultValueAttachment : AttachmentSchema,
   defaultValueCodeableConcept : CodeableConceptSchema,
   defaultValueCoding : CodingSchema,
   defaultValueContactPoint : ContactPointSchema,
   defaultValueCount : CountSchema,
   defaultValueDistance : DistanceSchema,
   defaultValueDuration : DurationSchema,
   defaultValueHumanName : HumanNameSchema,
   defaultValueIdentifier : IdentifierSchema,
   defaultValueMoney : MoneySchema,
   defaultValuePeriod : PeriodSchema,
   defaultValueQuantity : QuantitySchema,
   defaultValueRange : RangeSchema,
   defaultValueRatio : RatioSchema,
   defaultValueReference : ReferenceSchema,
   defaultValueSampledData : SampledDataSchema,
   defaultValueSignature : SignatureSchema,
   defaultValueTiming : TimingSchema,
   defaultValueContactDetail : ContactDetailSchema,
   defaultValueContributor : ContributorSchema,
   defaultValueDataRequirement : DataRequirementSchema,
   defaultValueExpression : ExpressionSchema,
   defaultValueParameterDefinition : ParameterDefinitionSchema,
   defaultValueRelatedArtifact : RelatedArtifactSchema,
   defaultValueTriggerDefinition : TriggerDefinitionSchema,
   defaultValueUsageContext : UsageContextSchema,
   defaultValueDosage : DosageSchema,
   defaultValueMeta : MetaSchema,
   meaningWhenMissing : String,
   orderMeaning : String,
   fixedBase64Binary : String,
   fixedBoolean : Boolean,
   fixedCanonical : String,
   fixedCode : String,
   fixedDate : FHIRDate,
   fixedDateTime : DateTime,
   fixedDecimal : Number,
   fixedId : String,
   fixedInstant : DateTime,
   fixedInteger : Number,
   fixedMarkdown : String,
   fixedOid : String,
   fixedPositiveInt : Number,
   fixedString : String,
   fixedTime : DateTime,
   fixedUnsignedInt : Number,
   fixedUri : String,
   fixedUrl : String,
   fixedUuid : String,
   fixedAddress : AddressSchema,
   fixedAge : AgeSchema,
   fixedAnnotation : AnnotationSchema,
   fixedAttachment : AttachmentSchema,
   fixedCodeableConcept : CodeableConceptSchema,
   fixedCoding : CodingSchema,
   fixedContactPoint : ContactPointSchema,
   fixedCount : CountSchema,
   fixedDistance : DistanceSchema,
   fixedDuration : DurationSchema,
   fixedHumanName : HumanNameSchema,
   fixedIdentifier : IdentifierSchema,
   fixedMoney : MoneySchema,
   fixedPeriod : PeriodSchema,
   fixedQuantity : QuantitySchema,
   fixedRange : RangeSchema,
   fixedRatio : RatioSchema,
   fixedReference : ReferenceSchema,
   fixedSampledData : SampledDataSchema,
   fixedSignature : SignatureSchema,
   fixedTiming : TimingSchema,
   fixedContactDetail : ContactDetailSchema,
   fixedContributor : ContributorSchema,
   fixedDataRequirement : DataRequirementSchema,
   fixedExpression : ExpressionSchema,
   fixedParameterDefinition : ParameterDefinitionSchema,
   fixedRelatedArtifact : RelatedArtifactSchema,
   fixedTriggerDefinition : TriggerDefinitionSchema,
   fixedUsageContext : UsageContextSchema,
   fixedDosage : DosageSchema,
   fixedMeta : MetaSchema,
   patternBase64Binary : String,
   patternBoolean : Boolean,
   patternCanonical : String,
   patternCode : String,
   patternDate : FHIRDate,
   patternDateTime : DateTime,
   patternDecimal : Number,
   patternId : String,
   patternInstant : DateTime,
   patternInteger : Number,
   patternMarkdown : String,
   patternOid : String,
   patternPositiveInt : Number,
   patternString : String,
   patternTime : DateTime,
   patternUnsignedInt : Number,
   patternUri : String,
   patternUrl : String,
   patternUuid : String,
   patternAddress : AddressSchema,
   patternAge : AgeSchema,
   patternAnnotation : AnnotationSchema,
   patternAttachment : AttachmentSchema,
   patternCodeableConcept : CodeableConceptSchema,
   patternCoding : CodingSchema,
   patternContactPoint : ContactPointSchema,
   patternCount : CountSchema,
   patternDistance : DistanceSchema,
   patternDuration : DurationSchema,
   patternHumanName : HumanNameSchema,
   patternIdentifier : IdentifierSchema,
   patternMoney : MoneySchema,
   patternPeriod : PeriodSchema,
   patternQuantity : QuantitySchema,
   patternRange : RangeSchema,
   patternRatio : RatioSchema,
   patternReference : ReferenceSchema,
   patternSampledData : SampledDataSchema,
   patternSignature : SignatureSchema,
   patternTiming : TimingSchema,
   patternContactDetail : ContactDetailSchema,
   patternContributor : ContributorSchema,
   patternDataRequirement : DataRequirementSchema,
   patternExpression : ExpressionSchema,
   patternParameterDefinition : ParameterDefinitionSchema,
   patternRelatedArtifact : RelatedArtifactSchema,
   patternTriggerDefinition : TriggerDefinitionSchema,
   patternUsageContext : UsageContextSchema,
   patternDosage : DosageSchema,
   patternMeta : MetaSchema,
   example : [ElementDefinitionExampleSchema],
   minValueDate : FHIRDate,
   minValueDateTime : DateTime,
   minValueInstant : DateTime,
   minValueTime : DateTime,
   minValueDecimal : Number,
   minValueInteger : Number,
   minValuePositiveInt : Number,
   minValueUnsignedInt : Number,
   minValueQuantity : QuantitySchema,
   maxValueDate : FHIRDate,
   maxValueDateTime : DateTime,
   maxValueInstant : DateTime,
   maxValueTime : DateTime,
   maxValueDecimal : Number,
   maxValueInteger : Number,
   maxValuePositiveInt : Number,
   maxValueUnsignedInt : Number,
   maxValueQuantity : QuantitySchema,
   maxLength : Number,
   condition : [String],
   constraint : [ElementDefinitionConstraintSchema],
   mustSupport : Boolean,
   isModifier : Boolean,
   isModifierReason : String,
   isSummary : Boolean,
   binding : ElementDefinitionBindingSchema,
   mapping : [ElementDefinitionMappingSchema],
   fhirTitle: { type: String, default: 'ElementDefinition' },
});

class ElementDefinition extends mongoose.Document {
  constructor(object) {
    super(object, ElementDefinitionSchema);
    this._type = 'FHIR::ElementDefinition';
  }
};

function  ElementDefinitionSchemaFunction(add: SchemaDefinition, options: SchemaOptions) {
  const extended = new Schema({
   path : String,
   representation : [PropertyRepresentationSchema],
   sliceName : String,
   sliceIsConstraining : Boolean,
   label : String,
   code : [CodingSchema],
   slicing : ElementDefinitionSlicingSchema,
   short : String,
   definition : String,
   comment : String,
   requirements : String,
   alias : [String],
   min : Number,
   max : String,
   base : ElementDefinitionBaseSchema,
   contentReference : String,
   type : [ElementDefinitionTypeSchema],
   defaultValueBase64Binary : String,
   defaultValueBoolean : Boolean,
   defaultValueCanonical : String,
   defaultValueCode : String,
   defaultValueDate : FHIRDate,
   defaultValueDateTime : DateTime,
   defaultValueDecimal : Number,
   defaultValueId : String,
   defaultValueInstant : DateTime,
   defaultValueInteger : Number,
   defaultValueMarkdown : String,
   defaultValueOid : String,
   defaultValuePositiveInt : Number,
   defaultValueString : String,
   defaultValueTime : DateTime,
   defaultValueUnsignedInt : Number,
   defaultValueUri : String,
   defaultValueUrl : String,
   defaultValueUuid : String,
   defaultValueAddress : AddressSchema,
   defaultValueAge : AgeSchema,
   defaultValueAnnotation : AnnotationSchema,
   defaultValueAttachment : AttachmentSchema,
   defaultValueCodeableConcept : CodeableConceptSchema,
   defaultValueCoding : CodingSchema,
   defaultValueContactPoint : ContactPointSchema,
   defaultValueCount : CountSchema,
   defaultValueDistance : DistanceSchema,
   defaultValueDuration : DurationSchema,
   defaultValueHumanName : HumanNameSchema,
   defaultValueIdentifier : IdentifierSchema,
   defaultValueMoney : MoneySchema,
   defaultValuePeriod : PeriodSchema,
   defaultValueQuantity : QuantitySchema,
   defaultValueRange : RangeSchema,
   defaultValueRatio : RatioSchema,
   defaultValueReference : ReferenceSchema,
   defaultValueSampledData : SampledDataSchema,
   defaultValueSignature : SignatureSchema,
   defaultValueTiming : TimingSchema,
   defaultValueContactDetail : ContactDetailSchema,
   defaultValueContributor : ContributorSchema,
   defaultValueDataRequirement : DataRequirementSchema,
   defaultValueExpression : ExpressionSchema,
   defaultValueParameterDefinition : ParameterDefinitionSchema,
   defaultValueRelatedArtifact : RelatedArtifactSchema,
   defaultValueTriggerDefinition : TriggerDefinitionSchema,
   defaultValueUsageContext : UsageContextSchema,
   defaultValueDosage : DosageSchema,
   defaultValueMeta : MetaSchema,
   meaningWhenMissing : String,
   orderMeaning : String,
   fixedBase64Binary : String,
   fixedBoolean : Boolean,
   fixedCanonical : String,
   fixedCode : String,
   fixedDate : FHIRDate,
   fixedDateTime : DateTime,
   fixedDecimal : Number,
   fixedId : String,
   fixedInstant : DateTime,
   fixedInteger : Number,
   fixedMarkdown : String,
   fixedOid : String,
   fixedPositiveInt : Number,
   fixedString : String,
   fixedTime : DateTime,
   fixedUnsignedInt : Number,
   fixedUri : String,
   fixedUrl : String,
   fixedUuid : String,
   fixedAddress : AddressSchema,
   fixedAge : AgeSchema,
   fixedAnnotation : AnnotationSchema,
   fixedAttachment : AttachmentSchema,
   fixedCodeableConcept : CodeableConceptSchema,
   fixedCoding : CodingSchema,
   fixedContactPoint : ContactPointSchema,
   fixedCount : CountSchema,
   fixedDistance : DistanceSchema,
   fixedDuration : DurationSchema,
   fixedHumanName : HumanNameSchema,
   fixedIdentifier : IdentifierSchema,
   fixedMoney : MoneySchema,
   fixedPeriod : PeriodSchema,
   fixedQuantity : QuantitySchema,
   fixedRange : RangeSchema,
   fixedRatio : RatioSchema,
   fixedReference : ReferenceSchema,
   fixedSampledData : SampledDataSchema,
   fixedSignature : SignatureSchema,
   fixedTiming : TimingSchema,
   fixedContactDetail : ContactDetailSchema,
   fixedContributor : ContributorSchema,
   fixedDataRequirement : DataRequirementSchema,
   fixedExpression : ExpressionSchema,
   fixedParameterDefinition : ParameterDefinitionSchema,
   fixedRelatedArtifact : RelatedArtifactSchema,
   fixedTriggerDefinition : TriggerDefinitionSchema,
   fixedUsageContext : UsageContextSchema,
   fixedDosage : DosageSchema,
   fixedMeta : MetaSchema,
   patternBase64Binary : String,
   patternBoolean : Boolean,
   patternCanonical : String,
   patternCode : String,
   patternDate : FHIRDate,
   patternDateTime : DateTime,
   patternDecimal : Number,
   patternId : String,
   patternInstant : DateTime,
   patternInteger : Number,
   patternMarkdown : String,
   patternOid : String,
   patternPositiveInt : Number,
   patternString : String,
   patternTime : DateTime,
   patternUnsignedInt : Number,
   patternUri : String,
   patternUrl : String,
   patternUuid : String,
   patternAddress : AddressSchema,
   patternAge : AgeSchema,
   patternAnnotation : AnnotationSchema,
   patternAttachment : AttachmentSchema,
   patternCodeableConcept : CodeableConceptSchema,
   patternCoding : CodingSchema,
   patternContactPoint : ContactPointSchema,
   patternCount : CountSchema,
   patternDistance : DistanceSchema,
   patternDuration : DurationSchema,
   patternHumanName : HumanNameSchema,
   patternIdentifier : IdentifierSchema,
   patternMoney : MoneySchema,
   patternPeriod : PeriodSchema,
   patternQuantity : QuantitySchema,
   patternRange : RangeSchema,
   patternRatio : RatioSchema,
   patternReference : ReferenceSchema,
   patternSampledData : SampledDataSchema,
   patternSignature : SignatureSchema,
   patternTiming : TimingSchema,
   patternContactDetail : ContactDetailSchema,
   patternContributor : ContributorSchema,
   patternDataRequirement : DataRequirementSchema,
   patternExpression : ExpressionSchema,
   patternParameterDefinition : ParameterDefinitionSchema,
   patternRelatedArtifact : RelatedArtifactSchema,
   patternTriggerDefinition : TriggerDefinitionSchema,
   patternUsageContext : UsageContextSchema,
   patternDosage : DosageSchema,
   patternMeta : MetaSchema,
   example : [ElementDefinitionExampleSchema],
   minValueDate : FHIRDate,
   minValueDateTime : DateTime,
   minValueInstant : DateTime,
   minValueTime : DateTime,
   minValueDecimal : Number,
   minValueInteger : Number,
   minValuePositiveInt : Number,
   minValueUnsignedInt : Number,
   minValueQuantity : QuantitySchema,
   maxValueDate : FHIRDate,
   maxValueDateTime : DateTime,
   maxValueInstant : DateTime,
   maxValueTime : DateTime,
   maxValueDecimal : Number,
   maxValueInteger : Number,
   maxValuePositiveInt : Number,
   maxValueUnsignedInt : Number,
   maxValueQuantity : QuantitySchema,
   maxLength : Number,
   condition : [String],
   constraint : [ElementDefinitionConstraintSchema],
   mustSupport : Boolean,
   isModifier : Boolean,
   isModifierReason : String,
   isSummary : Boolean,
   binding : ElementDefinitionBindingSchema,
   mapping : [ElementDefinitionMappingSchema],
    id: {
      type: String,
      default() {
        return this._id ? this._id.toString() : mongoose.Types.ObjectId().toString();
      },
    },
  }, options);

  if (add) {
    extended.add(add);
  }
  return extended;
}

module.exports.ElementDefinitionSchemaFunction = ElementDefinitionSchemaFunction;
module.exports.ElementDefinitionSchema = ElementDefinitionSchema;
module.exports.ElementDefinition = ElementDefinition;
